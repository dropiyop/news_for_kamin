from pyexpat.errors import messages

from database import  get_connection



def add_user_channel(user_id, channel, channel_name):

    conn = get_connection()
    cursor = conn.cursor()

    cursor.execute("INSERT OR IGNORE INTO user_channels (user_id, channel, channel_name) VALUES (?, ?, ?)", (user_id, channel, channel_name))
    conn.commit()
    conn.close()

def remove_user_channel(user_id, channel):

    conn = get_connection()
    cursor = conn.cursor()


    cursor.execute("DELETE FROM user_channels WHERE user_id = ? AND channel = ?", (user_id, channel))
    conn.commit()
    conn.close()

def all_remove_channels(user_id):

    conn = get_connection()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM user_channels WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

def get_all_user_ids():
    """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã `user_channels`"""
    conn = get_connection()
    cursor = conn.cursor()

    cursor.execute("SELECT DISTINCT user_id FROM user_channels")

    user_ids = [row[0] for row in cursor.fetchall()]

    conn.commit()
    conn.close()
    return user_ids

def get_user_url_channel(user_id):

    conn = get_connection()
    cursor = conn.cursor()

    cursor.execute("SELECT channel FROM user_channels WHERE user_id = ?", (user_id,))
    channels = cursor.fetchall()
    conn.close()
    return channels

def get_user_channels(user_id):

    conn = get_connection()
    cursor = conn.cursor()

    cursor.execute("SELECT channel, channel_name FROM user_channels WHERE user_id = ?", (user_id,))
    channels = cursor.fetchall()
    conn.close()
    return channels

def add_init_client(user_id,chat_id,contact_username,contact_name,contact_phone):

    conn = get_connection()
    cursor = conn.cursor()

    cursor.execute("""
          INSERT OR IGNORE INTO init_clients (user_id, chat_id, contact_username, contact_name, contact_phone) 
          VALUES (?, ?, ?, ?, ?)
      """, (user_id, chat_id, contact_username, contact_name, contact_phone))

    conn.commit()
    conn.close()

def get_client_user_id(user_id):

    conn = get_connection()
    cursor = conn.cursor()

    cursor.execute("SELECT user_id FROM init_clients WHERE user_id = ?", (user_id,))

    result = cursor.fetchone()  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

    conn.close()

    # –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º user_id, –∏–Ω–∞—á–µ None
    return result[0] if result else None


def get_client_users():
    conn = get_connection()
    cursor = conn.cursor()

    cursor.execute("SELECT * FROM init_clients")

    result = cursor.fetchall()

    conn.close()

    # –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º user_id, –∏–Ω–∞—á–µ None
    return result if result else None


def remove_user(user_id):
    """–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    conn = get_connection()
    cursor = conn.cursor()

    cursor.execute("DELETE FROM init_clients WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

    print(f"üóë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–¥–∞–ª—ë–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.")

def get_descriptions_by_title(title):
    """–ò—â–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º –≤ `chat_history`"""
    conn = get_connection()
    cursor = conn.cursor()

    query = "SELECT title, description, url FROM chat_history WHERE title LIKE ?"
    cursor.execute(query, (f"%{title}%",))

    descriptions =[ {'description':row[1], 'url': row[2]} for row in cursor.fetchall()]

    conn.commit()
    conn.close()
    return descriptions

def delete_chat_history(user_id):

    """–£–¥–∞–ª—è–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–æ–ª—å–∫–æ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ `user_id`"""
    conn = get_connection()
    cursor = conn.cursor()

    cursor.execute("DELETE FROM chat_history WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()



def get_chat_history(user_id = None, role = None, title = None):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    conn = get_connection()
    cursor = conn.cursor()


    if role:
        cursor.execute("""
                SELECT role, topic_id, title, description, url 
                FROM chat_history 
                WHERE user_id = ? AND role = ? 
                ORDER BY id ASC
            """, (user_id, role))
    else:
        cursor.execute("""
                SELECT role, topic_id, title, description, url 
                FROM chat_history 
                WHERE user_id = ? 
                ORDER BY id ASC
            """, (user_id,))
    if title:
        titles = [
            {
            "title": row[2],
            "url": row[4]
            } for row in cursor.fetchall() if row[0] is not None]
        conn.close()
        return titles

    else:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π
        messages = [
            {
                "role": row[0],
                "topic_id": row[1],
                "title": row[2],
                "description": row[3],
                "url": row[4]
                } for row in cursor.fetchall()
            ]

        conn.close()
        return messages # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π



def save_chat_history(user_id, role, topic_id, title, description, url):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ. –ï—Å–ª–∏ url —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —É –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ."""
    conn = get_connection()
    cursor = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å —Å —Ç–∞–∫–∏–º url —É –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute("SELECT COUNT(*) FROM chat_history WHERE user_id = ? AND url = ?", (user_id, url))
    count = cursor.fetchone()[0]

    if count == 0:
        # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ç–∞–∫–æ–π –∑–∞–ø–∏—Å–∏, –¥–æ–±–∞–≤–ª—è–µ–º –µ—ë
        cursor.execute("""
            INSERT INTO chat_history (user_id, role, topic_id, title, description, url)
            VALUES (?, ?, ?, ?, ?, ?)
        """, (user_id, role, topic_id, title, description, url))
        conn.commit()

    conn.close()



def get_description_by_url(url):
    """–ò—â–µ—Ç `description` –≤ `chat_history` –ø–æ `url`."""
    conn = get_connection()
    cursor = conn.cursor()

    cursor.execute("""
        SELECT description FROM chat_history WHERE url = ? LIMIT 1
    """, (url,))

    result = cursor.fetchone()
    conn.close()

    return result[0] if result else None



# title="–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å ChatGPT –≤ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏ –∏ –ø—Ä–æ–±–ª–µ–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö –ø–æ–º–æ—â–Ω–∏–∫–æ–≤ Siri –∏ Alexa –Ω–∞ –±–∞–∑–µ –≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –ò–ò"
# topics_with_descriptions = {}
# ff = get_descriptions_by_title(title)
# topics_with_descriptions.setdefault(title,ff)
# print (topics_with_descriptions)
#
#
